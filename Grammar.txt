program -> moduleDeclarations otherModules driverModule otherModules
moduleDeclarations -> moduleDeclaration moduleDeclarations | epsilon
moduleDeclaration -> DECLARE MODULE ID SEMICOL
otherModules -> module otherModules | epsilon
driverModule -> DRIVERDEF DRIVER PROGRAM DRIVERENDDEF moduleDef
module -> DEF MODULE ID ENDDEF TAKES INPUT SQBO input_plist SQBC SEMICOL ret moduleDef
ret -> RETURNS SQBO output_plist SQBC SEMICOL | epsilon
input_plist -> ID COLON dataType N1
N1 -> COMMA ID COLON dataType N1 | epsilon
output_plist -> ID COLON type N2
N2 -> COMMA ID COLON type N2 | epsilon
dataType -> INTEGER | REAL | BOOLEAN | ARRAY SQBO range SQBC OF type
type -> INTEGER | REAL | BOOLEAN
moduleDef -> START statements END
statements -> statement statements | epsilon
statement -> ioStmt | simpleStmt | declareStmt | condionalStmt | iterativeStmt
ioStmt -> GET_VALUE BO ID BC SEMICOL | PRINT BO var BC SEMICOL
var -> ID whichId | NUM | RNUM
whichId -> SQBO ID SQBC | epsilon
simpleStmt -> assignmentStmt | moduleReuseStmt
assignmentStmt -> ID whichStmt
whichStmt -> lvalueIDStmt | lvalueARRStmt
lvalueIDStmt -> ASSIGNOP expression SEMICOL
lvalueARRStmt -> SQBO index SQBC ASSIGNOP expression SEMICOL
index -> NUM | ID
moduleReuseStmt -> optional USE MODULE ID WITH PARAMETERS idlist SEMICOL
optional -> SQBO idlist SQBC ASSIGNOP | epsilon
idlist -> ID N3
N3 -> COMMA ID N3 | epsilon
expression -> arithmeticOrBooleanExpr | MINUS BO arithmeticExpr BC
arithmeticOrBooleanExpr -> AnyTerm N7
N7 -> logicalOp AnyTerm N7 | epsilon
AnyTerm -> arithmeticExpr N8 
N8 -> relationalOp arithmeticExpr N8 | epsilon
arithmeticExpr -> term N4 
N4 -> op1 term N4 | epsilon
term -> factor N5 
N5 -> op2 factor N5 | epsilon
factor -> var | BO arithmeticOrBooleanExpr BC
op1 -> PLUS | MINUS
op2 -> MUL | DIV
logicalOp -> AND | OR
relationalOp -> LT | LE | GT | GE | EQ | NE 
declareStmt -> DECLARE idlist COLON dataType SEMICOL
condionalStmt -> SWITCH BO ID BC START caseStmts default1 END
caseStmts -> CASE value COLON statements BREAK SEMICOL N9
N9 -> CASE value COLON statements BREAK SEMICOL N9 | epsilon
value -> NUM | TRUE | FALSE
default1 -> DEFAULT COLON statements BREAK SEMICOL | epsilon
iterativeStmt -> FOR BO ID IN range BC START statements END | WHILE BO arithmeticOrBooleanExpr BC START statements END
range -> NUM RANGEOP NUM